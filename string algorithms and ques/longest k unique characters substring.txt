#include <bits/stdc++.h>
using namespace std;

bool islessthank(unordered_map<char, int> mp, int k)
{
    int count=0;
    for(int it=0; it<mp.size(); it++)
    {
        if( mp[it]>0)
         count++;
    }
    return count<=k;
}
int Longest_k_unique_characters(string str, int k)
{
    int n = str.length();
    
    int max= INT_MIN;
    
    unordered_map<char, int> mp;
    
    for(int i=0; i<n; i++)
      mp[str[i]]=1;
      
    int unique=mp.size();
    if(unique<k)
     return -1;
     
    mp.clear();
    
   mp[str[0]]++;
   
   int start=0, end=0;
   
   for(int i=1; i<n; i++)
   {
         mp[str[i]]++;
         end++;
         
         if(!islessthank(mp, k))
          {
             mp[str[start]]--;
             start++;
          }
        if(max< end-start+1)
        {
            max = end-start+1;
        }
         
   }
    return max;
}

int main() {
    
    int T;
    cin>>T;
    while(T--)
    {
        string str;
        cin>>str;
        int k;
        cin>>k;
        
        cout<<Longest_k_unique_characters(str, k)<<endl;
    }
    return 0;
}